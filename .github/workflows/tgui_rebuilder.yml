name: TGUI Auto-Rebuild on Public Conflicts

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-and-rebuild:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Fetch target branch (e.g., master220)
        run: |
          git fetch origin ${{ github.base_ref }}  # –¶–µ–ª–µ–≤–∞—è –≤–µ—Ç–∫–∞ (base)

      - name: Check merge conflicts in tgui/public
        id: check-conflicts
        run: |
          # –ü—ã—Ç–∞–µ–º—Å—è —Å–¥–µ–ª–∞—Ç—å –º–µ—Ä–¥–∂ "–≤–Ω–∏–∫—É–¥–∞" (—á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã)
          git merge --no-commit --no-ff origin/${{ github.base_ref }} || true
          
          CONFLICT_FILES=$(git diff --name-only --diff-filter=U)
          echo "Conflicted files: $CONFLICT_FILES"

          BAD_CONFLICTS=0
          for FILE in $CONFLICT_FILES; do
            if [[ "$FILE" != "tgui/public/"* || "$FILE" == "tgui/public/tgui.html" ]]; then
              echo "Invalid conflict: $FILE"
              BAD_CONFLICTS=1
              break
            fi
          done

          # –ï—Å–ª–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Ç–æ–ª—å–∫–æ –≤ tgui/public (–∫—Ä–æ–º–µ tgui.html) ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
          if [ "$BAD_CONFLICTS" -eq 0 ] && [ -n "$CONFLICT_FILES" ]; then
            echo "safe_to_rebuild=true" >> $GITHUB_OUTPUT
          else
            echo "safe_to_rebuild=false" >> $GITHUB_OUTPUT
          fi

          git merge --abort

      - name: Rebuild TGUI (if safe)
        if: steps.check-conflicts.outputs.safe_to_rebuild == 'true'
        run: |
          cd tgui/public
          find . -type f -not -name 'tgui.html' -delete
          find . -type d -not -name '.' -exec rm -rf {} +
          cd ../..

          ./tgui/bin/tgui

          git config --local user.email "actions@github.com"
          git config --local user.name "TGUI Auto-Rebuild"
          git add tgui/public
          git commit -m "Auto-rebuild TGUI after conflicts"
          git push

      - name: Comment on PR (if rebuilt)
        if: steps.check-conflicts.outputs.safe_to_rebuild == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–æ–±—Ä–∞–ª TGUI –ø–æ—Å–ª–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ –≤ `tgui/public`. ' +
                    '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–∏—Ç–µ PR, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ!'
            })

      - name: Comment on PR (if unsafe conflicts)
        if: steps.check-conflicts.outputs.safe_to_rebuild == 'false' && steps.check-conflicts.outputs.conflict_files != ''
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ `tgui/public` –∏–ª–∏ –≤ `tgui.html`. ' +
                    '–ù–µ–ª—å–∑—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å TGUI. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é.'
            })
